@startuml Log In
actor :User: <<abstract>>
package "Authentication" {
  (Log In) as LogIn
}
User -up- LogIn
@enduml

# Participating Actors

- User

# Preconditions

- The User is not authenticated

# Flow of Events

1. The User clicks a "Log In" button
2. The User enters their username and password
3. The User clicks a "Submit" button
4. The User is authenticated

# Alternative Flow of Events

3a. If the User's credentials are invalid, the system displays an error message. Return to step 2.

@startuml Log In Object Model
class LogIn <<control>> {}
class LogInForm <<boundary>> {}
class Credentials <<entity>> {
  + username: String
  + passwordHash: Byte[1024]
}
class AuthenticationStateManager <<control>> {}
interface IPasswordHasher <<interface>> {
  + hash(String password): Byte[1024]
}
LogIn --> "+ form" LogInForm
LogIn --> Credentials : Checks >
LogIn --> "- hasher" IPasswordHasher : Uses >
LogIn --> AuthenticationStateManager
@enduml